{"ast":null,"code":"// 引入createStore 专门用于创建redux中最为核心的store对象 版本4可用\n\n//import {configureStore}  from 'redux'\n\n//  该文件专门用于暴露一个store对象 整个应用只有一个store对象\nimport { legacy_createStore as createStore, applyMiddleware, combineReducers } from 'redux';\nimport countReducer from './reducer/count';\nimport personReducer from './reducer/person';\n\n// 引入 redux-thunk 用于支持异步action\nimport { thunk } from 'redux-thunk';\n\n// 汇总所有的reducer\nconst allReducers = combineReducers({\n  sum: countReducer,\n  persons: personReducer\n});\nexport default createStore(allReducers, applyMiddleware(thunk));","map":{"version":3,"names":["legacy_createStore","createStore","applyMiddleware","combineReducers","countReducer","personReducer","thunk","allReducers","sum","persons"],"sources":["/Users/huhongxia/Desktop/temp/react_basic/react_staging/src/redux/store.js"],"sourcesContent":["// 引入createStore 专门用于创建redux中最为核心的store对象 版本4可用\n\n//import {configureStore}  from 'redux'\n\n//  该文件专门用于暴露一个store对象 整个应用只有一个store对象\nimport { legacy_createStore as createStore,applyMiddleware ,combineReducers} from 'redux'\n\nimport countReducer from './reducer/count'\nimport personReducer from './reducer/person'\n \n// 引入 redux-thunk 用于支持异步action\nimport { thunk } from 'redux-thunk'\n\n// 汇总所有的reducer\nconst allReducers = combineReducers({\n    sum:countReducer,\n    persons:personReducer\n\n})\n\nexport default createStore(allReducers, applyMiddleware(thunk))"],"mappings":"AAAA;;AAEA;;AAEA;AACA,SAASA,kBAAkB,IAAIC,WAAW,EAACC,eAAe,EAAEC,eAAe,QAAO,OAAO;AAEzF,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,aAAa,MAAM,kBAAkB;;AAE5C;AACA,SAASC,KAAK,QAAQ,aAAa;;AAEnC;AACA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;EAChCK,GAAG,EAACJ,YAAY;EAChBK,OAAO,EAACJ;AAEZ,CAAC,CAAC;AAEF,eAAeJ,WAAW,CAACM,WAAW,EAAEL,eAAe,CAACI,KAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}